# syntax=docker/dockerfile:1.7

FROM ubuntu:20.04 as builder

ARG ANSIBLE_VERSION="6.7.0"
ARG ANSIBLE_LINT_VERSION="6.13.1"

ENV VENV_PATH=/opt/venv
ENV PATH="$VENV_PATH/bin:$PATH"

ARG PYTHON_VERSION="3.11"
ENV TZ=US/Chicago

ARG DEBIAN_FRONTEND=noninteractive

RUN rm -f /etc/apt/apt.conf.d/docker-clean

RUN --mount=type=cache,target=/var/cache/apt <<EOF
#!/usr/bin/env bash
apt-get update -qq
apt-get install -qq --no-install-recommends -y \
    software-properties-common
add-apt-repository ppa:deadsnakes/ppa -y
apt-get update -qq
apt-get install -qq --no-install-recommends -y \
    python3-pip \
    python3.11 \
    python3.11-venv
apt-get clean
rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
EOF

RUN update-alternatives --install \
    /usr/bin/python3 python /usr/bin/python${PYTHON_VERSION} 1 \
    && update-alternatives --set python /usr/bin/python${PYTHON_VERSION} \
    && update-alternatives --set python /usr/bin/python${PYTHON_VERSION}

RUN python3 -m venv $VENV_PATH

ENV PIP_CACHE_DIR=/root/.cache/pip
ENV PIP_DISABLE_PIP_VERSION_CHECK=on
ENV PIP_DEFAULT_TIMEOUT=100

RUN mkdir -p $PIP_CACHE_DIR

RUN --mount=type=cache,target=/root/.cache/pip \
    python3 -m pip install --upgrade pip setuptools \
    && python3 -m pip install \
        ansible==$ANSIBLE_VERSION \
        ansible-lint==$ANSIBLE_LINT_VERSION

WORKDIR /ansible-role-asdf

COPY . .

FROM ubuntu:20.04 as runner

ARG USER_NAME=deploy
ARG USER_UID=1000
ARG USER_GID=$USER_UID

ARG PLAYBOOK_FILE="golang.yml"
ARG PLUGIN_EXEC="go version"

ARG PYTHON_VERSION="3.11"
ENV VENV_PATH=/opt/venv
ENV PATH="$VENV_PATH/bin:$PATH"

# Standardise on locale, don't generate .pyc, enable tracebacks on seg faults
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONFAULTHANDLER=1

ARG DEBIAN_FRONTEND=noninteractive

# TODO: run test w/python
RUN apt-get update -qq \
    && apt-get install -qq --no-install-recommends -y \
        apt-utils \
        ca-certificates \
        git \
        sudo \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

WORKDIR /ansible-role-asdf

COPY --from=builder $VENV_PATH $VENV_PATH
COPY . .

COPY --from=builder /usr/bin/python${PYTHON_VERSION} \
    /usr/bin/python${PYTHON_VERSION}
COPY --from=builder /usr/lib/python$PYTHON_VERSION \
    /usr/lib/python$PYTHON_VERSION
COPY --from=builder /usr/lib/python$PYTHON_VERSION/lib-dynload \
    /usr/lib/python$PYTHON_VERSION/lib-dynload
COPY --from=builder /ansible-role-asdf /ansible-role-asdf
RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python3 \
    && ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python

RUN groupadd --gid $USER_GID $USER_NAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USER_NAME \
    && mkdir -p /etc/sudoers.d \
    && echo "$USER_NAME ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/$USER_NAME \
    && chmod 0440 /etc/sudoers.d/$USER_NAME

USER $USER_NAME

CMD ["./tests/entrypoint.sh"]
